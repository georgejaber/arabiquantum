@model  List<arabiquantum.ViewModels.ListPostsViewModel>

@{
    <head>
        <link rel="stylesheet" href="https://www.w3schools.com/w3css/4/w3.css">
        <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.3.0/css/all.min.css">
  
    </head>

    <main role="main" >
       
      <div class="container">


            @{var count=0;
                foreach (var listPosts in Model)
                {
                  count++;
                    <div style="border-radius: 0px" class="container ">
                        <div style="border-radius: 0px ; border-color: #235074; " class="card w3-panel w3-border w3-hover-border-blue ">
                            <div style="border-radius: 0px;  margin-right:2%;" class="card-body">
                                <div class="row justify-content-between">


                                    <div class=" col-sm-2"> <h4 class="card-title ">@listPosts.PostUsername</h4> </div>
                                    <div class=" col-sm-2"> <p class="text-muted small mb-0">@listPosts.PostDateTime</p> </div>
                                </div>

                                @using (Html.BeginForm("Edit", "Post", FormMethod.Post))
                                {
                                    <div class="row">
                                        <div class="col-11">

                                            <input  type="text" id="ed" name="PostText" class="no-outline" value="@listPosts.PostText" style="background-color:white ; width:100%;border-style:hidden;" />

                                           @Html.Hidden("PostId",listPosts.PostId)
                                            @Html.Hidden("PostRequestRoutedFrom","Posts")
                                        </div>
                                        <div class="col-1">
                                            <div style="position: absolute; top: 10%; right:-1%;">
                                                <div class="votes">
                                                    <span class="upvote">&#9650;</span>
                                                    <br>
                                                    <span class="count">0</span>
                                                    <br>
                                                    <span class="downvote">&#9660;</span>
                                                </div>
                                            </div>
                                        </div>
                                    </div>

                                    @if (User.Identity.IsAuthenticated && User.IsInRole("admin"))
                                    {
                                        <div dir="ltr" class="row justify-content-start flex-row-reverse">
                                            <div>
                                                <button type="button" class="myb2 p-1" style="width:4%;"><i class="fa-regular fa-trash-can"></i></button>
                                                <button type="button" class="myb2 p-1" style="width:4%;" onclick="disableEnable()"><i class="fa-regular fa-pen-to-square"></i></button>
                                                <button type="submit" class="myb2 p-1" style="width:4%;"><i class="fa-regular fa fa-floppy-disk"></i></button>
                                            </div>
                                        </div>
                                    }
                                }

                                @Html.ActionLink("التفاصيل",
                                    "index",
                                    "comment",
                                   new{listPosts.PostId},
                                    new { type = "button", @class = "myb1"})

                            </div>
                        </div>
                    </div>

                }
            }
        </div>
        <script>
            document.addEventListener("click", function (event) {
                // Check if the clicked element is an upvote or downvote button
                if (event.target.matches(".upvote") || event.target.matches(".downvote")) {
                    // Get the count and button elements for the clicked post
                    let countEl = event.target.parentNode.querySelector(".count");
                    let upvoteEl = event.target.parentNode.querySelector(".upvote");
                    let downvoteEl = event.target.parentNode.querySelector(".downvote");

                    // Check if the opposite button was previously clicked
                    let oppositeButton = event.target.matches(".upvote") ? downvoteEl : upvoteEl;
                    if (oppositeButton.classList.contains("clicked")) {
                        // Reset the count and opposite button state
                        countEl.textContent -= 2;
                        oppositeButton.classList.remove("clicked");
                    }
                    let isClicked = event.target.classList.contains("clicked");
                    // Increment or decrement the count based on which button was clicked
                    if (event.target.matches(".upvote")) {
                        if (!isClicked) {
                            countEl.textContent++;
                            upvoteEl.classList.add("clicked");
                            downvoteEl.classList.remove("clicked");
                        }
                        else {
                            countEl.textContent--;
                            upvoteEl.classList.remove("clicked");
                        }
                    } else {
                        if (!isClicked) {
                            countEl.textContent--;
                            downvoteEl.classList.add("clicked");
                            upvoteEl.classList.remove("clicked");
                        }
                        else {
                            countEl.textContent++;
                            downvoteEl.classList.remove("clicked");
                        }
                    }
                }
            });







</script>
       
       
    </main>
    
}