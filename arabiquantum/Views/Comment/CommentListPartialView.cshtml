@model List<arabiquantum.ViewModels.ListCommentsViewModel>
<head>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.3.0/css/all.min.css">

</head>
<main role="main" class="mb-5">
    <div class="container">

        @{
            foreach (var listComments in Model)

            { 


                <div class="container ">
                    <div style="border-radius: 0px ; border-color: #235074" class="card w3-panel w3-border w3-hover-border-blue">
                        <div style="margin-right:2%;" class="card-body">
                            <div class="row justify-content-between">
                                <h4 class="card-title " style=" width:25vw;">
                                @listComments.CommentUsername        
                                </h4>
                                <p class="text-muted small mb-0 " style=" width:26vw;">@listComments.CommentDateTime</p>

                            </div>

                            @using (Html.BeginForm("Edit", "comment", FormMethod.Post))
                            {
                                
                               
                                <div class="row">
                                    <div class="col-11">
                                        <input type="text" id="@listComments.CommentId" name="CommentText" class="no-outline" disabled value="@listComments.CommentText" style="background-color:white ; width:100%;border-style:hidden;" />
                                        @Html.Hidden("postid", (object)ViewBag.postid)
                                        @Html.Hidden("CommentId",listComments.CommentId)
                                    </div>
                                </div>
                                <div class="col-1">
                                    <div style="position: absolute; top: 5%; right:-1%;">
                                        <div class="votes">
                                            <span class="upvote">&#9650;</span>
                                            <br>
                                            <span class="count">0</span>
                                            <br>
                                            <span class="downvote">&#9660;</span>
                                        </div>
                                    </div>
                                </div>

                                if (User.Identity.IsAuthenticated && User.IsInRole("admin"))
                                {
                                    <div class="row justify-content-start flex-row-reverse">
                                        <div class="">
                                            <button type="button" id="@listComments.CommentId e" class="myb2  p-1" style="width:4%;" onclick="disableEnable(this.id)"><i class="fa-regular fa-pen-to-square"></i></button>
                                            <button type="button" class="myb2  p-1" style="width:4%;"><i class="fa-regular fa-trash-can"></i></button>
                                            <button type="submit" id="@listComments.CommentId s" class="myb2  p-1" style="width:4%;visibility: hidden;"><i class="fa-regular fa fa-floppy-disk"></i></button>
                                        </div>
                                    </div>
                                }
                            }

                        </div>
                    </div>

                </div>
                
            }
       
                                          
                                            }
    </div>
    <script>
        document.addEventListener("click", function (event) {
            // Check if the clicked element is an upvote or downvote button
            if (event.target.matches(".upvote") || event.target.matches(".downvote")) {
                // Get the count and button elements for the clicked post
                let countEl = event.target.parentNode.querySelector(".count");
                let upvoteEl = event.target.parentNode.querySelector(".upvote");
                let downvoteEl = event.target.parentNode.querySelector(".downvote");

                // Increment or decrement the count based on which button was clicked
                if (event.target.matches(".upvote")) {
                    countEl.textContent++;
                    upvoteEl.classList.add("clicked");
                    downvoteEl.classList.remove("clicked");
                } else {
                    countEl.textContent--;
                    downvoteEl.classList.add("clicked");
                    upvoteEl.classList.remove("clicked");
                }
            }
        });

    </script>
</main>



